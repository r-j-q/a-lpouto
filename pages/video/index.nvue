<template>
	<div class="page">
		<!-- 	<div class="custom">
			<div class="mask"></div>
		</div> -->
		<div v-for="(item,idx) in videoList" :key="idx" class="video-box">

			<div>

				<!-- #ifdef APP-PLUS -->

				<chunlei-video ref="video" class="video" color="#5f2c82" :flag="item.flag" :cont="item.content" title=""
					:srcList="item.src" :gDuration="item.duration" :poster="item.avatar" :initialTime="item.initialTime"
					@pause="pauseVideo($event,item)">
				</chunlei-video>

				<!-- #endif -->

				<!-- #ifndef APP-PLUS -->
				<chunleiVideoH5 class="video" ref="video" :play="item.flag" @pause="pauseVideo($event,item)"
					:src="item.src" :poster="item.avatar" :initialTime="item.initialTime"></chunleiVideoH5>
				<!-- #endif -->


				<cover-view class="videoMask" v-if="playIndex!=idx" @click.stop="clickMask(idx)"></cover-view>


				<div class="bottoms">
					<div class="content">
						<div class="content-left">
							<!-- <image class="avatar marginRight" :src="item.avatar"></image> -->
							<text class="title">{{item.content}}</text>
						</div>
						<div class="content-right">
							<!-- <text class="iconfont marginRight">&#xe635;</text>
							<text class="iconfont">&#xe67e;</text><text
								class="text-sm marginRight"></text>
							<text class="iconfont">&#xe603;</text><text class="text-sm marginRight"></text>
							<text class="iconfont">&#xe67f;</text> -->
						</div>
					</div>
				</div>

				<!-- <div class="bottomMask" v-if="playIndex!=idx||timeMask"></div> -->

			</div>
		</div>
	</div>
</template>

<script>
	const videoBoxHeight = 290 //视频盒子高度

	//#ifdef APP-PLUS
	import chunleiVideo from '@/components/chunlei-video/chunlei-video';
	//#endif
	import chunleiVideoH5 from '@/components/chunlei-video-h5/chunlei-video-h5';
	export default {
		components: {
			//#ifdef APP-PLUS
			chunleiVideo,
			//#endif
			chunleiVideoH5
		},
		data() {
			return {
				listNumber: 3, //剩余视频小于3时加载视频
				playTop: 200, //播放高度


				index: 0, //当前视频展示索引
				timerDeb: null,
				timerThr: null,
				playIndex: -1,
				timeMask: true,

				videoList: [{
						src: 'https://stock-plouto.com/sVideo/work1/work1.m3u8',
						content: 'How dose the stock market work',
						flag: false,
						like: '10w',
						comment: '1045',
						avatar: 'https://stock-plouto.com/sVideo/img1.png',
						initialTime: 0,
						at: '',
						duration: 841,
					},
					{
						src: 'https://stock-plouto.com/sVideo/work2/work2.m3u8',
						content: 'How is the stock price determined stock market',
						flag: false,
						like: '7w',
						comment: '1045',
						avatar: 'https://stock-plouto.com/sVideo/img2.png',
						initialTime: 0,
						at: '',
						duration: 149
					},
					{
						src: 'https://stock-plouto.com/sVideo/work3/work3.m3u8',
						content: 'options for beginners(part 1)',
						flag: false,
						like: '7w',
						comment: '1045',
						avatar: 'https://stock-plouto.com/sVideo/img3.png',
						initialTime: 0,
						at: '',
						duration: 1162
					},
					{
						src: 'https://stock-plouto.com/sVideo/work4/work4.m3u8',
						content: 'options for beginners(part 2)',
						flag: false,
						like: '7w',
						comment: '1045',
						avatar: 'https://stock-plouto.com/sVideo/img4.png',
						initialTime: 0,
						at: '',
						duration: 1162
					}
				],

			}
		},
		beforeCreate() {
			// #ifdef APP-PLUS-NVUE
			var domModule = weex.requireModule('dom');
			domModule.addRule('fontFace', {
				'fontFamily': "iconfont",
				'src': "url('../../static/srcoll-video/text-icon.ttf')"
			});
			// #endif
		},
		created() {
			//#ifdef APP-PLUS
			plus.screen.lockOrientation("portrait-primary")
			//#endif
		},
		async mounted() {
			this.playIndex = 0
			await this.pushVideoList()
		},
		onHide() {
			for (let item of this.videoList) {
				item.flag = false
			}
		},
		onPageScroll(e) {
			this.index = (e.scrollTop - 44) / videoBoxHeight
			this.debounce(() => {
				this.playIndex = Math.floor((e.scrollTop - 44 + this.playTop) / videoBoxHeight)
			}, 300)()
		},
		onReachBottom() {
			this.throttle(() => {
				if (this.videoList.length - newVal - 1 < this.listNumber) {
					this.pushVideoList()
				}
			}, 200)()
		},
		methods: {
			pushVideoList() {
				this.videoList = [...this.videoList]
				// let promise = new Promise((resolve, reject) => {
				// 	uni.request({
				// 		url: 'https://api.apiopen.top/videoRecommend?id=127300',
				// 		success: (res) => {
				// 			let videoGroup = []
				// 			for (let item of res.data.result) {
				// 				if (item.type == 'videoSmallCard') {
				// 					videoGroup.push({
				// 						src: item.data.playUrl,
				// 						content: item.data.title,
				// 						flag: false,
				// 						like: '7w',
				// 						comment: '1045',
				// 						at: item.data.author.name,
				// 						avatar: item.data.author.icon,
				// 						initialTime: 0,
				// 						duration: item.data.duration
				// 					})
				// 				}
				// 			}
				// 			this.videoList = [...this.videoList, ]
				// 			resolve()
				// 		}
				// 	})
				// })
				// return promise
			},
			clickMask(idx) {
				this.playIndex = idx
			},
			pauseVideo(val, item) {
				item.initialTime = val
			},
			debounce(func, delay) {
				return () => {
					if (this.timerDeb) clearTimeout(this.timerDeb);
					this.timerDeb = setTimeout(() => {
						func()
					}, delay)
				}
			},
			throttle(func, delay) {
				return () => {
					if (!this.timerThr) {
						func()
						this.timerThr = setTimeout(() => {
							this.timerThr = null;
						}, delay);
					}
				}
			}
		},
		watch: {
			index: {
				handler: async function(newVal) {
					this.throttle(() => {
						if (this.videoList.length - newVal - 1 < this.listNumber) {
							// this.pushVideoList()
						}
					}, 200)()
				}
			},
			playIndex(newVal) {
				this.timeMask = false
				setTimeout(() => {
					this.timeMask = true
				}, 2000);
				for (let item of this.videoList) {
					item.flag = false
				}
				this.videoList[newVal].flag = true
			}
		}
	}
</script>

<style scoped>
	.contentStyles {
		position: relative;
		z-index: 99
	}

	/* #ifndef APP-PLUS-NVUE */
	@font-face {
		font-family: "iconfont";
		src: url('~@/static/srcoll-video/text-icon.ttf') format('truetype');
	}

	.iconfont {
		font-family: "iconfont";
		font-size: 16px;
		color: #fff;
	}

	/* #endif*/

	/* #ifdef APP-PLUS-NVUE */
	.iconfont {
		font-family: iconfont;
		font-size: 16px;
		color: #fff;
	}

	/* #endif*/
	.text-sm {
		font-size: 12px;
        color: #fff;
	}

/* 	.marginRight {
		margin-right: 10rpx;
	} */

	.page {
		/* #ifndef APP-PLUS */
		display: flex;
		/* #endif */
		justify-content: flex-start;
		flex-direction: column;
		background-color: #000;
	}

	.custom {
		height: 44px;
		width: 750rpx;
		background-color: #000;
		position: relative;
	}

	.mask {
		position: absolute;
		height: 44px;
		width: 750rpx;
		background-color: rgba(0, 0, 0, 0.7);
	}

	.video-box {
		position: relative;
		height: 290px;
		background-color: #000;
	}

	.video {
		height: 200px;
		width: 750rpx;
	}

	.videoMask {
		position: absolute;
		top: 0;
		height: 250px;
		width: 750rpx;
		/* background-color: rgba(0, 0, 0, 0.7); */
		z-index: 99;
	}

	.bottoms {
		/* height: 90px; */
		/* #ifndef APP-PLUS */
		display: flex;
		/* #endif */
		flex-direction: column;
		justify-content: space-between;
		padding: 10px;
		/* #ifndef APP-PLUS */
		box-sizing: border-box;
		/* #endif */
	}

	.bottomMask {
		position: absolute;
		bottom: 0;
		height: 90px;
		width: 750rpx;
		background-color: rgba(0, 0, 0, 0.7);
	}

	.title {
		font-size: 14px;
		color: #fff;
	}

	.avatar {
		height: 50rpx;
		width: 50rpx;
		border-radius: 25rpx;
	}

	.content {
		/* #ifndef APP-PLUS */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
	}

	.content-left {
		/* #ifndef APP-PLUS */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
	}

	.content-right {
		/* #ifndef APP-PLUS */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
	}

	.color_f_f {
		color: #fff
	}
</style>
